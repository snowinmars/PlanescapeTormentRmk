import re
import sys

# Regex patterns for matching label definitions, jumps, and calls
LABEL_PATTERN = re.compile(r'label\s+(.*?):')
JUMP_PATTERN = re.compile(r'jump\s+(.*?)\n')
CALL_PATTERN = re.compile(r'call\s+(.*?)\n')

IGNORE_LABELS = {
    'graphics_menu',
    'todo',
    'able_s10',
    'able_s11',
    'able_s12',
    'able_s13',
    'able_s16',
    'able_s2',
    'able_s65',
    'adabus_s2',
    'adabus_s6',
    'adyzoel_s13',
    'adyzoel_s19',
    'adyzoel_s20',
    'adyzoel_s32',
    'adyzoel_s33',
    'adyzoel_s35',
    'adyzoel_s36',
    'aethel_s11',
    'annah_s1',
    'annah_s10',
    'annah_s107',
    'annah_s12',
    'annah_s13',
    'annah_s14',
    'annah_s15',
    'annah_s166',
    'annah_s17',
    'annah_s18',
    'annah_s196',
    'annah_s209',
    'annah_s21',
    'annah_s210',
    'annah_s214',
    'annah_s215',
    'annah_s240',
    'annah_s242',
    'annah_s269',
    'annah_s3',
    'annah_s315',
    'annah_s40',
    'annah_s418',
    'annah_s43',
    'annah_s446',
    'annah_s5',
    'annah_s6',
    'annah_s8',
    'annah_s99',
    'await_s15',
    'await_s6',
    'baria_s20',
    'baria_s4',
    'bishab_s11',
    'brocus4_s2',
    'brocus4_s4',
    'brocus6_s3',
    'codexi_s2',
    'colylfn_s10',
    'colylfn_s11',
    'colylfn_s12',
    'colylfn_s13',
    'colylfn_s14',
    'colylfn_s15',
    'colylfn_s16',
    'colylfn_s18',
    'colylfn_s19',
    'colylfn_s20',
    'colylfn_s23',
    'colylfn_s41',
    'colylfn_s5',
    'colylfn_s52',
    'colylfn_s53',
    'colylfn_s6',
    'colylfn_s61',
    'colylfn_s9',
    'craddo_s15',
    'creed_s15',
    'creed_s18',
    'creed_s30',
    'creed_s32',
    'creed_s40',
    'creed_s49',
    'creed_s59',
    'cwcafef_s15',
    'cwcafef_s4',
    'cwcafef_s50',
    'cwcafef_s51',
    'cwcafef_s52',
    'cwrushf_s2',
    'cwrushf_s27',
    'cwrushf_s28',
    'cwrushf_s29',
    'd300mer5_s2',
    'd300mer5_s5',
    'd3planea_s1',
    'dabus_s3',
    'dabus_s6',
    'dakkon_s163',
    'dakkon_s174',
    'dakkon_s175',
    'dakkon_s177',
    'dakkon_s178',
    'dakkon_s179',
    'dakkon_s182',
    'dakkon_s183',
    'dakkon_s74',
    'dakkon_s75',
    'deathad_s1',
    'deathad_s11',
    'deathad_s15',
    'deathad_s16',
    'deathad_s17',
    'deathad_s18',
    'deathad_s2',
    'deathad_s26',
    'deathad_s3',
    'deathad_s5',
    'deathad_s6',
    'deathad_s8',
    'deathad_s9',
    'dustgu_s12',
    'ecco_s34',
    'ecco_s7',
    'fell_s8',
    'fhjull_s27',
    'fhjull_s46',
    'fhjull_s88',
    'ghivef_s47',
    'ghivef_s49',
    'ghivem_s49',
    'ghivem_s51',
    'ghocitf_s1',
    'ghocitm_s1',
    'ghysis_s1',
    'giltsp_s4',
    'gith_s7',
    'goncal_s20',
    'grace_s119',
    'grace_s14',
    'grace_s169',
    'grace_s170',
    'grace_s176',
    'grace_s177',
    'grace_s184',
    'grace_s186',
    'grace_s187',
    'grace_s191',
    'grace_s213',
    'grace_s3',
    'grace_s373',
    'grace_s60',
    'grace_s7',
    'grace_s72',
    'grace_s79',
    'harlotn_s11',
    'harlotn_s2',
    'harlotn_s3',
    'harlotn_s7',
    'harlotn_s8',
    'harlotn_s9',
    'hivef1_s8',
    'iannis_s10',
    'ignus_s11',
    'ignus_s13',
    'jumble_s2',
    'jumble_s7',
    'jumble_s8',
    'jumble_s9',
    'justfer_s8',
    'kesai_s11',
    'kesai_s2',
    'kiina_s35',
    'kimasxi_s14',
    'kimasxi_s18',
    'kimasxi_s2',
    'kimasxi_s20',
    'kimasxi_s21',
    'kimasxi_s3',
    'kimasxi_s4',
    'malmanr_s13',
    'malmanr_s14',
    'malmanr_s15',
    'manyas1_s5',
    'manyas1_s58',
    'manyas1_s78',
    'marissa_s2',
    'marissa_s3',
    'marta_s15',
    'marta_s16',
    'marta_s24',
    'marta_s9',
    'mftree_s28',
    'montagu_s29',
    'montagu_s30',
    'montagu_s31',
    'neml_s11',
    'neml_s14',
    'neml_s4',
    'neml_s6',
    'nenny_s2',
    'nenny_s27',
    'nenny_s3',
    'nenny_s9',
    'nordom_s1',
    'nordom_s11',
    'nordom_s12',
    'nordom_s13',
    'nordom_s15',
    'nordom_s17',
    'nordom_s19',
    'nordom_s2',
    'nordom_s20',
    'nordom_s21',
    'nordom_s3',
    'nordom_s6',
    'nordom_s65',
    'nordom_s67',
    'nordom_s74',
    'nordom_s9',
    'ojo_s11',
    'ojo_s12',
    'pillar_s10',
    'pillar_s12',
    'pillar_s14',
    'pillar_s17',
    'pillar_s18',
    'pillar_s19',
    'pillar_s2',
    'pillar_s20',
    'pillar_s21',
    'pillar_s22',
    'pillar_s23',
    'pillar_s5',
    'pillar_s50',
    'pillar_s9',
    'post_s2',
    'post_s3',
    'post_s4',
    'post_s5',
    'pregal_s10',
    'quell_s21',
    'quisai_s11',
    'quisai_s23',
    'quisai_s29',
    'quisai_s3',
    'quisai_s30',
    'quisai_s5',
    'ravel_s126',
    'ravel_s189',
    'ravel_s66',
    'ravel_s67',
    'ravel_s68',
    'sadjuli_s12',
    'sadjuli_s13',
    'sadjuli_s24',
    'sarhava_s13',
    'sarhava_s14',
    'sarhava_s3',
    'sarhava_s39',
    'sarhava_s4',
    'sarhava_s40',
    'sarhava_s41',
    'sarhava_s42',
    'sarhava_s7',
    'skelw_s4',
    'skelw_s5',
    'skelw_s6',
    'tegarin_s12',
    'test_s0',
    'test_s7',
    'trans_s142',
    'trias_s8',
    'ucho_s10',
    'ucho_s9',
    'udesire_s2',
    'vault9_s0',
    'vhail_s1',
    'vhailor_s1',
    'vrisch_s45',
    'vrisch_s46',
    'vrisch_s7',
    'yiminn_s47',
    'yves_s2',
    'yves_s4',
    'yves_s55',
    'zomcitf_s1',
    'zomcitf_s3',
}


def extract_label_names(content, pattern):
    names = set()
    for match in pattern.findall(content):
        name = match.strip().split()[0].rstrip(':')
        names.add(name)
    return names


def match_labels(rpy_files):
    errors = []
    warnings = []
    defined_labels = set()
    referenced_labels = set()

    for rpy_file in rpy_files:
        defined_labels.update(extract_label_names(rpy_file.content, LABEL_PATTERN))
        referenced_labels.update(extract_label_names(rpy_file.content, JUMP_PATTERN))
        referenced_labels.update(extract_label_names(rpy_file.content, CALL_PATTERN))

    # Remove ignored labels and compute undefined labels
    referenced_labels -= IGNORE_LABELS
    undefined_labels = referenced_labels - defined_labels

    if undefined_labels:
        for label in sorted(undefined_labels):
            errors.append(f"Undefined label {label}")

    return errors, warnings
